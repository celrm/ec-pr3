   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"timer.c"
  21              	.Ltext0:
  22              		.file 1 "../timer.c"
 1698              		.align	2
 1699              		.global	tmr_set_prescaler
 1701              	tmr_set_prescaler:
 1702              	.LFB0:
   1:../timer.c    **** /*********************************************************************************************
   2:../timer.c    ****  * Fichero:        timer.c
   3:../timer.c    ****  * Descrip:        funciones de control del timer0 del s3c44b0x
   4:../timer.c    ****  *********************************************************************************************/
   5:../timer.c    **** 
   6:../timer.c    **** /*--- ficheros de cabecera ---*/
   7:../timer.c    **** #include "44b.h"
   8:../timer.c    **** #include "timer.h"
   9:../timer.c    **** 
  10:../timer.c    **** int tmr_set_prescaler(int p, int  value)
  11:../timer.c    **** {
 1703              		.loc 1 11 0
 1704              		.cfi_startproc
 1705              		@ Function supports interworking.
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 0DC0A0E1 		mov	ip, sp
 1709              	.LCFI0:
 1710              		.cfi_def_cfa_register 12
 1711 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1712 0008 04B04CE2 		sub	fp, ip, #4
 1713              		.cfi_offset 14, -8
 1714              		.cfi_offset 13, -12
 1715              		.cfi_offset 11, -16
 1716              	.LCFI1:
 1717              		.cfi_def_cfa 11, 4
 1718 000c 10D04DE2 		sub	sp, sp, #16
 1719 0010 18000BE5 		str	r0, [fp, #-24]
 1720 0014 1C100BE5 		str	r1, [fp, #-28]
  12:../timer.c    ****     int offset = p*8;
 1721              		.loc 1 12 0
 1722 0018 18301BE5 		ldr	r3, [fp, #-24]
 1723 001c 8331A0E1 		mov	r3, r3, asl #3
 1724 0020 10300BE5 		str	r3, [fp, #-16]
  13:../timer.c    ****     value &= 0xFF;
 1725              		.loc 1 13 0
 1726 0024 1C301BE5 		ldr	r3, [fp, #-28]
 1727 0028 FF3003E2 		and	r3, r3, #255
 1728 002c 1C300BE5 		str	r3, [fp, #-28]
  14:../timer.c    ****     
  15:../timer.c    ****     if (p < 0 || p > 3)
 1729              		.loc 1 15 0
 1730 0030 18301BE5 		ldr	r3, [fp, #-24]
 1731 0034 000053E3 		cmp	r3, #0
 1732 0038 020000BA 		blt	.L2
 1733              		.loc 1 15 0 is_stmt 0 discriminator 1
 1734 003c 18301BE5 		ldr	r3, [fp, #-24]
 1735 0040 030053E3 		cmp	r3, #3
 1736 0044 010000DA 		ble	.L3
 1737              	.L2:
  16:../timer.c    ****         return -1;
 1738              		.loc 1 16 0 is_stmt 1
 1739 0048 0030E0E3 		mvn	r3, #0
 1740 004c 080000EA 		b	.L4
 1741              	.L3:
  17:../timer.c    ****     
  18:../timer.c    ****     rTCFG0 = rTCFG0 | (value << offset);
 1742              		.loc 1 18 0
 1743 0050 2C309FE5 		ldr	r3, .L5
 1744 0054 28209FE5 		ldr	r2, .L5
 1745 0058 001092E5 		ldr	r1, [r2, #0]
 1746 005c 1C001BE5 		ldr	r0, [fp, #-28]
 1747 0060 10201BE5 		ldr	r2, [fp, #-16]
 1748 0064 1022A0E1 		mov	r2, r0, asl r2
 1749 0068 022081E1 		orr	r2, r1, r2
 1750 006c 002083E5 		str	r2, [r3, #0]
  19:../timer.c    ****     return 0;
 1751              		.loc 1 19 0
 1752 0070 0030A0E3 		mov	r3, #0
 1753              	.L4:
  20:../timer.c    **** }
 1754              		.loc 1 20 0
 1755 0074 0300A0E1 		mov	r0, r3
 1756 0078 0CD04BE2 		sub	sp, fp, #12
 1757 007c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1758 0080 1EFF2FE1 		bx	lr
 1759              	.L6:
 1760              		.align	2
 1761              	.L5:
 1762 0084 0000D501 		.word	30736384
 1763              		.cfi_endproc
 1764              	.LFE0:
 1766              		.align	2
 1767              		.global	tmr_set_divider
 1769              	tmr_set_divider:
 1770              	.LFB1:
  21:../timer.c    **** 
  22:../timer.c    **** int tmr_set_divider(int d, enum tmr_div div)
  23:../timer.c    **** {
 1771              		.loc 1 23 0
 1772              		.cfi_startproc
 1773              		@ Function supports interworking.
 1774              		@ args = 0, pretend = 0, frame = 16
 1775              		@ frame_needed = 1, uses_anonymous_args = 0
 1776 0088 0DC0A0E1 		mov	ip, sp
 1777              	.LCFI2:
 1778              		.cfi_def_cfa_register 12
 1779 008c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1780 0090 04B04CE2 		sub	fp, ip, #4
 1781              		.cfi_offset 14, -8
 1782              		.cfi_offset 13, -12
 1783              		.cfi_offset 11, -16
 1784              	.LCFI3:
 1785              		.cfi_def_cfa 11, 4
 1786 0094 10D04DE2 		sub	sp, sp, #16
 1787 0098 18000BE5 		str	r0, [fp, #-24]
 1788 009c 0130A0E1 		mov	r3, r1
 1789 00a0 19304BE5 		strb	r3, [fp, #-25]
  24:../timer.c    ****     int ret = 0;
 1790              		.loc 1 24 0
 1791 00a4 0030A0E3 		mov	r3, #0
 1792 00a8 10300BE5 		str	r3, [fp, #-16]
  25:../timer.c    ****     int pos = d*4;
 1793              		.loc 1 25 0
 1794 00ac 18301BE5 		ldr	r3, [fp, #-24]
 1795 00b0 0331A0E1 		mov	r3, r3, asl #2
 1796 00b4 14300BE5 		str	r3, [fp, #-20]
  26:../timer.c    ****     
  27:../timer.c    ****     if ((d < 0 || d > 5) ||
 1797              		.loc 1 27 0
 1798 00b8 18301BE5 		ldr	r3, [fp, #-24]
 1799 00bc 000053E3 		cmp	r3, #0
 1800 00c0 140000BA 		blt	.L8
 1801              		.loc 1 27 0 is_stmt 0 discriminator 1
 1802 00c4 18301BE5 		ldr	r3, [fp, #-24]
 1803 00c8 050053E3 		cmp	r3, #5
 1804 00cc 110000CA 		bgt	.L8
 1805 00d0 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1806 00d4 040053E3 		cmp	r3, #4
 1807 00d8 0200001A 		bne	.L9
  28:../timer.c    ****         (div == D1_32 && d > 3) ||
 1808              		.loc 1 28 0 is_stmt 1
 1809 00dc 18301BE5 		ldr	r3, [fp, #-24]
 1810 00e0 030053E3 		cmp	r3, #3
 1811 00e4 0B0000CA 		bgt	.L8
 1812              	.L9:
 1813              		.loc 1 28 0 is_stmt 0 discriminator 1
 1814 00e8 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1815 00ec 050053E3 		cmp	r3, #5
 1816 00f0 0200001A 		bne	.L10
  29:../timer.c    ****         (div == EXTCLK && d != 5) ||
 1817              		.loc 1 29 0 is_stmt 1
 1818 00f4 18301BE5 		ldr	r3, [fp, #-24]
 1819 00f8 050053E3 		cmp	r3, #5
 1820 00fc 0500001A 		bne	.L8
 1821              	.L10:
 1822              		.loc 1 29 0 is_stmt 0 discriminator 1
 1823 0100 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1824 0104 060053E3 		cmp	r3, #6
 1825 0108 0400001A 		bne	.L11
  30:../timer.c    ****         (div == TCLK && d != 4))
 1826              		.loc 1 30 0 is_stmt 1
 1827 010c 18301BE5 		ldr	r3, [fp, #-24]
 1828 0110 040053E3 		cmp	r3, #4
 1829 0114 0100000A 		beq	.L11
 1830              	.L8:
  31:../timer.c    ****         return -1;
 1831              		.loc 1 31 0
 1832 0118 0030E0E3 		mvn	r3, #0
 1833 011c 190000EA 		b	.L12
 1834              	.L11:
  32:../timer.c    ****     
  33:../timer.c    ****     if (div == EXTCLK || div == TCLK)
 1835              		.loc 1 33 0
 1836 0120 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1837 0124 050053E3 		cmp	r3, #5
 1838 0128 0200000A 		beq	.L13
 1839              		.loc 1 33 0 is_stmt 0 discriminator 1
 1840 012c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1841 0130 060053E3 		cmp	r3, #6
 1842 0134 0100001A 		bne	.L14
 1843              	.L13:
  34:../timer.c    ****         div = 4;
 1844              		.loc 1 34 0 is_stmt 1
 1845 0138 0430A0E3 		mov	r3, #4
 1846 013c 19304BE5 		strb	r3, [fp, #-25]
 1847              	.L14:
  35:../timer.c    ****     
  36:../timer.c    ****     rTCFG1 = rTCFG1 & ~(0xFF << pos);//0's a partir de pos
 1848              		.loc 1 36 0
 1849 0140 50309FE5 		ldr	r3, .L15
 1850 0144 4C209FE5 		ldr	r2, .L15
 1851 0148 001092E5 		ldr	r1, [r2, #0]
 1852 014c FF00A0E3 		mov	r0, #255
 1853 0150 14201BE5 		ldr	r2, [fp, #-20]
 1854 0154 1022A0E1 		mov	r2, r0, asl r2
 1855 0158 0220E0E1 		mvn	r2, r2
 1856 015c 022001E0 		and	r2, r1, r2
 1857 0160 002083E5 		str	r2, [r3, #0]
  37:../timer.c    ****     rTCFG1 = rTCFG1 | (div << pos);
 1858              		.loc 1 37 0
 1859 0164 2C309FE5 		ldr	r3, .L15
 1860 0168 28209FE5 		ldr	r2, .L15
 1861 016c 001092E5 		ldr	r1, [r2, #0]
 1862 0170 19005BE5 		ldrb	r0, [fp, #-25]	@ zero_extendqisi2
 1863 0174 14201BE5 		ldr	r2, [fp, #-20]
 1864 0178 1022A0E1 		mov	r2, r0, asl r2
 1865 017c 022081E1 		orr	r2, r1, r2
 1866 0180 002083E5 		str	r2, [r3, #0]
  38:../timer.c    ****     return 0;
 1867              		.loc 1 38 0
 1868 0184 0030A0E3 		mov	r3, #0
 1869              	.L12:
  39:../timer.c    **** }
 1870              		.loc 1 39 0
 1871 0188 0300A0E1 		mov	r0, r3
 1872 018c 0CD04BE2 		sub	sp, fp, #12
 1873 0190 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1874 0194 1EFF2FE1 		bx	lr
 1875              	.L16:
 1876              		.align	2
 1877              	.L15:
 1878 0198 0400D501 		.word	30736388
 1879              		.cfi_endproc
 1880              	.LFE1:
 1882              		.align	2
 1883              		.global	tmr_set_count
 1885              	tmr_set_count:
 1886              	.LFB2:
  40:../timer.c    **** 
  41:../timer.c    **** int tmr_set_count(enum tmr_timer t, int count, int cmp)
  42:../timer.c    **** {
 1887              		.loc 1 42 0
 1888              		.cfi_startproc
 1889              		@ Function supports interworking.
 1890              		@ args = 0, pretend = 0, frame = 24
 1891              		@ frame_needed = 1, uses_anonymous_args = 0
 1892 019c 0DC0A0E1 		mov	ip, sp
 1893              	.LCFI4:
 1894              		.cfi_def_cfa_register 12
 1895 01a0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1896 01a4 04B04CE2 		sub	fp, ip, #4
 1897              		.cfi_offset 14, -8
 1898              		.cfi_offset 13, -12
 1899              		.cfi_offset 11, -16
 1900              	.LCFI5:
 1901              		.cfi_def_cfa 11, 4
 1902 01a8 18D04DE2 		sub	sp, sp, #24
 1903 01ac 0030A0E1 		mov	r3, r0
 1904 01b0 1C100BE5 		str	r1, [fp, #-28]
 1905 01b4 20200BE5 		str	r2, [fp, #-32]
 1906 01b8 15304BE5 		strb	r3, [fp, #-21]
  43:../timer.c    ****     int err = 0;
 1907              		.loc 1 43 0
 1908 01bc 0030A0E3 		mov	r3, #0
 1909 01c0 10300BE5 		str	r3, [fp, #-16]
  44:../timer.c    ****     switch (t) {
 1910              		.loc 1 44 0
 1911 01c4 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1912 01c8 050053E3 		cmp	r3, #5
 1913 01cc 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1914 01d0 2C0000EA 		b	.L18
 1915              	.L25:
 1916 01d4 EC010000 		.word	.L19
 1917 01d8 08020000 		.word	.L20
 1918 01dc 24020000 		.word	.L21
 1919 01e0 40020000 		.word	.L22
 1920 01e4 5C020000 		.word	.L23
 1921 01e8 78020000 		.word	.L24
 1922              	.L19:
  45:../timer.c    ****         case TIMER0:
  46:../timer.c    ****             rTCNTB0 = count;
 1923              		.loc 1 46 0
 1924 01ec B0309FE5 		ldr	r3, .L27
 1925 01f0 1C201BE5 		ldr	r2, [fp, #-28]
 1926 01f4 002083E5 		str	r2, [r3, #0]
  47:../timer.c    ****             rTCMPB0 = cmp;
 1927              		.loc 1 47 0
 1928 01f8 A8309FE5 		ldr	r3, .L27+4
 1929 01fc 20201BE5 		ldr	r2, [fp, #-32]
 1930 0200 002083E5 		str	r2, [r3, #0]
  48:../timer.c    ****             break;
 1931              		.loc 1 48 0
 1932 0204 210000EA 		b	.L26
 1933              	.L20:
  49:../timer.c    ****         case TIMER1:
  50:../timer.c    ****             rTCNTB1 = count;
 1934              		.loc 1 50 0
 1935 0208 9C309FE5 		ldr	r3, .L27+8
 1936 020c 1C201BE5 		ldr	r2, [fp, #-28]
 1937 0210 002083E5 		str	r2, [r3, #0]
  51:../timer.c    ****             rTCMPB1 = cmp;
 1938              		.loc 1 51 0
 1939 0214 94309FE5 		ldr	r3, .L27+12
 1940 0218 20201BE5 		ldr	r2, [fp, #-32]
 1941 021c 002083E5 		str	r2, [r3, #0]
  52:../timer.c    ****             break;
 1942              		.loc 1 52 0
 1943 0220 1A0000EA 		b	.L26
 1944              	.L21:
  53:../timer.c    ****         case TIMER2:
  54:../timer.c    ****             rTCNTB2 = count;
 1945              		.loc 1 54 0
 1946 0224 88309FE5 		ldr	r3, .L27+16
 1947 0228 1C201BE5 		ldr	r2, [fp, #-28]
 1948 022c 002083E5 		str	r2, [r3, #0]
  55:../timer.c    ****             rTCMPB2 = cmp;
 1949              		.loc 1 55 0
 1950 0230 80309FE5 		ldr	r3, .L27+20
 1951 0234 20201BE5 		ldr	r2, [fp, #-32]
 1952 0238 002083E5 		str	r2, [r3, #0]
  56:../timer.c    ****             break;
 1953              		.loc 1 56 0
 1954 023c 130000EA 		b	.L26
 1955              	.L22:
  57:../timer.c    ****         case TIMER3:
  58:../timer.c    ****             rTCNTB3 = count;
 1956              		.loc 1 58 0
 1957 0240 74309FE5 		ldr	r3, .L27+24
 1958 0244 1C201BE5 		ldr	r2, [fp, #-28]
 1959 0248 002083E5 		str	r2, [r3, #0]
  59:../timer.c    ****             rTCMPB3 = cmp;
 1960              		.loc 1 59 0
 1961 024c 6C309FE5 		ldr	r3, .L27+28
 1962 0250 20201BE5 		ldr	r2, [fp, #-32]
 1963 0254 002083E5 		str	r2, [r3, #0]
  60:../timer.c    ****             break;
 1964              		.loc 1 60 0
 1965 0258 0C0000EA 		b	.L26
 1966              	.L23:
  61:../timer.c    ****         case TIMER4:
  62:../timer.c    ****             rTCNTB4 = count;
 1967              		.loc 1 62 0
 1968 025c 60309FE5 		ldr	r3, .L27+32
 1969 0260 1C201BE5 		ldr	r2, [fp, #-28]
 1970 0264 002083E5 		str	r2, [r3, #0]
  63:../timer.c    ****             rTCMPB4 = cmp;
 1971              		.loc 1 63 0
 1972 0268 58309FE5 		ldr	r3, .L27+36
 1973 026c 20201BE5 		ldr	r2, [fp, #-32]
 1974 0270 002083E5 		str	r2, [r3, #0]
  64:../timer.c    ****             break;
 1975              		.loc 1 64 0
 1976 0274 050000EA 		b	.L26
 1977              	.L24:
  65:../timer.c    ****         case TIMER5:
  66:../timer.c    ****             rTCNTB5 = count;
 1978              		.loc 1 66 0
 1979 0278 4C309FE5 		ldr	r3, .L27+40
 1980 027c 1C201BE5 		ldr	r2, [fp, #-28]
 1981 0280 002083E5 		str	r2, [r3, #0]
  67:../timer.c    ****             break;
 1982              		.loc 1 67 0
 1983 0284 010000EA 		b	.L26
 1984              	.L18:
  68:../timer.c    ****         default:
  69:../timer.c    ****             err = -1;
 1985              		.loc 1 69 0
 1986 0288 0030E0E3 		mvn	r3, #0
 1987 028c 10300BE5 		str	r3, [fp, #-16]
 1988              	.L26:
  70:../timer.c    ****     }
  71:../timer.c    ****     
  72:../timer.c    ****     return err;
 1989              		.loc 1 72 0
 1990 0290 10301BE5 		ldr	r3, [fp, #-16]
  73:../timer.c    **** }
 1991              		.loc 1 73 0
 1992 0294 0300A0E1 		mov	r0, r3
 1993 0298 0CD04BE2 		sub	sp, fp, #12
 1994 029c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1995 02a0 1EFF2FE1 		bx	lr
 1996              	.L28:
 1997              		.align	2
 1998              	.L27:
 1999 02a4 0C00D501 		.word	30736396
 2000 02a8 1000D501 		.word	30736400
 2001 02ac 1800D501 		.word	30736408
 2002 02b0 1C00D501 		.word	30736412
 2003 02b4 2400D501 		.word	30736420
 2004 02b8 2800D501 		.word	30736424
 2005 02bc 3000D501 		.word	30736432
 2006 02c0 3400D501 		.word	30736436
 2007 02c4 3C00D501 		.word	30736444
 2008 02c8 4000D501 		.word	30736448
 2009 02cc 4800D501 		.word	30736456
 2010              		.cfi_endproc
 2011              	.LFE2:
 2013              		.align	2
 2014              		.global	tmr_update
 2016              	tmr_update:
 2017              	.LFB3:
  74:../timer.c    **** 
  75:../timer.c    **** int tmr_update(enum tmr_timer t)
  76:../timer.c    **** {
 2018              		.loc 1 76 0
 2019              		.cfi_startproc
 2020              		@ Function supports interworking.
 2021              		@ args = 0, pretend = 0, frame = 16
 2022              		@ frame_needed = 1, uses_anonymous_args = 0
 2023 02d0 0DC0A0E1 		mov	ip, sp
 2024              	.LCFI6:
 2025              		.cfi_def_cfa_register 12
 2026 02d4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2027 02d8 04B04CE2 		sub	fp, ip, #4
 2028              		.cfi_offset 14, -8
 2029              		.cfi_offset 13, -12
 2030              		.cfi_offset 11, -16
 2031              	.LCFI7:
 2032              		.cfi_def_cfa 11, 4
 2033 02dc 10D04DE2 		sub	sp, sp, #16
 2034 02e0 0030A0E1 		mov	r3, r0
 2035 02e4 15304BE5 		strb	r3, [fp, #-21]
  77:../timer.c    ****     int pos = t*4;
 2036              		.loc 1 77 0
 2037 02e8 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2038 02ec 0331A0E1 		mov	r3, r3, asl #2
 2039 02f0 10300BE5 		str	r3, [fp, #-16]
  78:../timer.c    ****     if (t > 0)
 2040              		.loc 1 78 0
 2041 02f4 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2042 02f8 000053E3 		cmp	r3, #0
 2043 02fc 0200000A 		beq	.L30
  79:../timer.c    ****         pos += 4;
 2044              		.loc 1 79 0
 2045 0300 10301BE5 		ldr	r3, [fp, #-16]
 2046 0304 043083E2 		add	r3, r3, #4
 2047 0308 10300BE5 		str	r3, [fp, #-16]
 2048              	.L30:
  80:../timer.c    ****     
  81:../timer.c    ****     if (t < 0 || t > 5)
 2049              		.loc 1 81 0
 2050 030c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2051 0310 050053E3 		cmp	r3, #5
 2052 0314 0100009A 		bls	.L31
  82:../timer.c    ****         return -1;
 2053              		.loc 1 82 0
 2054 0318 0030E0E3 		mvn	r3, #0
 2055 031c 130000EA 		b	.L32
 2056              	.L31:
  83:../timer.c    ****     
  84:../timer.c    ****     rTCON = rTCON | (1 << (pos+1)); //el bit de actualizacion es el segundo de cada bloque
 2057              		.loc 1 84 0
 2058 0320 58309FE5 		ldr	r3, .L33
 2059 0324 54209FE5 		ldr	r2, .L33
 2060 0328 001092E5 		ldr	r1, [r2, #0]
 2061 032c 10201BE5 		ldr	r2, [fp, #-16]
 2062 0330 012082E2 		add	r2, r2, #1
 2063 0334 0100A0E3 		mov	r0, #1
 2064 0338 1022A0E1 		mov	r2, r0, asl r2
 2065 033c 022081E1 		orr	r2, r1, r2
 2066 0340 002083E5 		str	r2, [r3, #0]
  85:../timer.c    ****     rTCON = rTCON & ~(1 << (pos+1));
 2067              		.loc 1 85 0
 2068 0344 34309FE5 		ldr	r3, .L33
 2069 0348 30209FE5 		ldr	r2, .L33
 2070 034c 001092E5 		ldr	r1, [r2, #0]
 2071 0350 10201BE5 		ldr	r2, [fp, #-16]
 2072 0354 012082E2 		add	r2, r2, #1
 2073 0358 0100A0E3 		mov	r0, #1
 2074 035c 1022A0E1 		mov	r2, r0, asl r2
 2075 0360 0220E0E1 		mvn	r2, r2
 2076 0364 022001E0 		and	r2, r1, r2
 2077 0368 002083E5 		str	r2, [r3, #0]
  86:../timer.c    **** 
  87:../timer.c    ****     return 0;
 2078              		.loc 1 87 0
 2079 036c 0030A0E3 		mov	r3, #0
 2080              	.L32:
  88:../timer.c    **** }
 2081              		.loc 1 88 0
 2082 0370 0300A0E1 		mov	r0, r3
 2083 0374 0CD04BE2 		sub	sp, fp, #12
 2084 0378 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2085 037c 1EFF2FE1 		bx	lr
 2086              	.L34:
 2087              		.align	2
 2088              	.L33:
 2089 0380 0800D501 		.word	30736392
 2090              		.cfi_endproc
 2091              	.LFE3:
 2093              		.align	2
 2094              		.global	tmr_set_mode
 2096              	tmr_set_mode:
 2097              	.LFB4:
  89:../timer.c    **** 
  90:../timer.c    **** int tmr_set_mode(enum tmr_timer t, enum tmr_mode mode)
  91:../timer.c    **** {
 2098              		.loc 1 91 0
 2099              		.cfi_startproc
 2100              		@ Function supports interworking.
 2101              		@ args = 0, pretend = 0, frame = 16
 2102              		@ frame_needed = 1, uses_anonymous_args = 0
 2103 0384 0DC0A0E1 		mov	ip, sp
 2104              	.LCFI8:
 2105              		.cfi_def_cfa_register 12
 2106 0388 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2107 038c 04B04CE2 		sub	fp, ip, #4
 2108              		.cfi_offset 14, -8
 2109              		.cfi_offset 13, -12
 2110              		.cfi_offset 11, -16
 2111              	.LCFI9:
 2112              		.cfi_def_cfa 11, 4
 2113 0390 10D04DE2 		sub	sp, sp, #16
 2114 0394 0020A0E1 		mov	r2, r0
 2115 0398 0130A0E1 		mov	r3, r1
 2116 039c 15204BE5 		strb	r2, [fp, #-21]
 2117 03a0 16304BE5 		strb	r3, [fp, #-22]
  92:../timer.c    ****     int err = 0;
 2118              		.loc 1 92 0
 2119 03a4 0030A0E3 		mov	r3, #0
 2120 03a8 10300BE5 		str	r3, [fp, #-16]
  93:../timer.c    ****     int pos = t*4;
 2121              		.loc 1 93 0
 2122 03ac 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2123 03b0 0331A0E1 		mov	r3, r3, asl #2
 2124 03b4 14300BE5 		str	r3, [fp, #-20]
  94:../timer.c    ****     if (t > 0)
 2125              		.loc 1 94 0
 2126 03b8 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2127 03bc 000053E3 		cmp	r3, #0
 2128 03c0 0200000A 		beq	.L36
  95:../timer.c    ****         pos += 4;
 2129              		.loc 1 95 0
 2130 03c4 14301BE5 		ldr	r3, [fp, #-20]
 2131 03c8 043083E2 		add	r3, r3, #4
 2132 03cc 14300BE5 		str	r3, [fp, #-20]
 2133              	.L36:
  96:../timer.c    ****     
  97:../timer.c    ****     if (t < 0 || t > 5)
 2134              		.loc 1 97 0
 2135 03d0 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2136 03d4 050053E3 		cmp	r3, #5
 2137 03d8 0100009A 		bls	.L37
  98:../timer.c    ****         return -1;
 2138              		.loc 1 98 0
 2139 03dc 0030E0E3 		mvn	r3, #0
 2140 03e0 380000EA 		b	.L38
 2141              	.L37:
  99:../timer.c    ****     
 100:../timer.c    ****     if (mode == ONE_SHOT) {
 2142              		.loc 1 100 0
 2143 03e4 16305BE5 		ldrb	r3, [fp, #-22]	@ zero_extendqisi2
 2144 03e8 000053E3 		cmp	r3, #0
 2145 03ec 1800001A 		bne	.L39
 101:../timer.c    ****         if (t!= 5){
 2146              		.loc 1 101 0
 2147 03f0 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2148 03f4 050053E3 		cmp	r3, #5
 2149 03f8 0A00000A 		beq	.L40
 102:../timer.c    ****             rTCON = rTCON & ~(1 << (pos+3));
 2150              		.loc 1 102 0
 2151 03fc D4309FE5 		ldr	r3, .L44
 2152 0400 D0209FE5 		ldr	r2, .L44
 2153 0404 001092E5 		ldr	r1, [r2, #0]
 2154 0408 14201BE5 		ldr	r2, [fp, #-20]
 2155 040c 032082E2 		add	r2, r2, #3
 2156 0410 0100A0E3 		mov	r0, #1
 2157 0414 1022A0E1 		mov	r2, r0, asl r2
 2158 0418 0220E0E1 		mvn	r2, r2
 2159 041c 022001E0 		and	r2, r1, r2
 2160 0420 002083E5 		str	r2, [r3, #0]
 2161 0424 260000EA 		b	.L41
 2162              	.L40:
 103:../timer.c    ****         }
 104:../timer.c    ****         else{
 105:../timer.c    ****             rTCON = rTCON & ~(1 << (pos+2)); //el 5 no tiene inverter
 2163              		.loc 1 105 0
 2164 0428 A8309FE5 		ldr	r3, .L44
 2165 042c A4209FE5 		ldr	r2, .L44
 2166 0430 001092E5 		ldr	r1, [r2, #0]
 2167 0434 14201BE5 		ldr	r2, [fp, #-20]
 2168 0438 022082E2 		add	r2, r2, #2
 2169 043c 0100A0E3 		mov	r0, #1
 2170 0440 1022A0E1 		mov	r2, r0, asl r2
 2171 0444 0220E0E1 		mvn	r2, r2
 2172 0448 022001E0 		and	r2, r1, r2
 2173 044c 002083E5 		str	r2, [r3, #0]
 2174 0450 1B0000EA 		b	.L41
 2175              	.L39:
 106:../timer.c    ****         }
 107:../timer.c    ****     }
 108:../timer.c    **** 
 109:../timer.c    ****     else if (mode == RELOAD) {
 2176              		.loc 1 109 0
 2177 0454 16305BE5 		ldrb	r3, [fp, #-22]	@ zero_extendqisi2
 2178 0458 010053E3 		cmp	r3, #1
 2179 045c 1600001A 		bne	.L42
 110:../timer.c    ****         if (t!= 5){
 2180              		.loc 1 110 0
 2181 0460 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2182 0464 050053E3 		cmp	r3, #5
 2183 0468 0900000A 		beq	.L43
 111:../timer.c    ****             rTCON = rTCON | (1 << (pos+3));
 2184              		.loc 1 111 0
 2185 046c 64309FE5 		ldr	r3, .L44
 2186 0470 60209FE5 		ldr	r2, .L44
 2187 0474 001092E5 		ldr	r1, [r2, #0]
 2188 0478 14201BE5 		ldr	r2, [fp, #-20]
 2189 047c 032082E2 		add	r2, r2, #3
 2190 0480 0100A0E3 		mov	r0, #1
 2191 0484 1022A0E1 		mov	r2, r0, asl r2
 2192 0488 022081E1 		orr	r2, r1, r2
 2193 048c 002083E5 		str	r2, [r3, #0]
 2194 0490 0B0000EA 		b	.L41
 2195              	.L43:
 112:../timer.c    ****         }
 113:../timer.c    ****         else{
 114:../timer.c    ****             rTCON = rTCON | (1 << (pos+2)); //el 5 no tiene inverter
 2196              		.loc 1 114 0
 2197 0494 3C309FE5 		ldr	r3, .L44
 2198 0498 38209FE5 		ldr	r2, .L44
 2199 049c 001092E5 		ldr	r1, [r2, #0]
 2200 04a0 14201BE5 		ldr	r2, [fp, #-20]
 2201 04a4 022082E2 		add	r2, r2, #2
 2202 04a8 0100A0E3 		mov	r0, #1
 2203 04ac 1022A0E1 		mov	r2, r0, asl r2
 2204 04b0 022081E1 		orr	r2, r1, r2
 2205 04b4 002083E5 		str	r2, [r3, #0]
 2206 04b8 010000EA 		b	.L41
 2207              	.L42:
 115:../timer.c    ****         }
 116:../timer.c    ****     }
 117:../timer.c    ****     else
 118:../timer.c    ****         err = -1;
 2208              		.loc 1 118 0
 2209 04bc 0030E0E3 		mvn	r3, #0
 2210 04c0 10300BE5 		str	r3, [fp, #-16]
 2211              	.L41:
 119:../timer.c    ****     
 120:../timer.c    ****     return err;
 2212              		.loc 1 120 0
 2213 04c4 10301BE5 		ldr	r3, [fp, #-16]
 2214              	.L38:
 121:../timer.c    **** }
 2215              		.loc 1 121 0
 2216 04c8 0300A0E1 		mov	r0, r3
 2217 04cc 0CD04BE2 		sub	sp, fp, #12
 2218 04d0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2219 04d4 1EFF2FE1 		bx	lr
 2220              	.L45:
 2221              		.align	2
 2222              	.L44:
 2223 04d8 0800D501 		.word	30736392
 2224              		.cfi_endproc
 2225              	.LFE4:
 2227              		.align	2
 2228              		.global	tmr_start
 2230              	tmr_start:
 2231              	.LFB5:
 122:../timer.c    **** 
 123:../timer.c    **** int tmr_start(enum tmr_timer t)
 124:../timer.c    **** {
 2232              		.loc 1 124 0
 2233              		.cfi_startproc
 2234              		@ Function supports interworking.
 2235              		@ args = 0, pretend = 0, frame = 16
 2236              		@ frame_needed = 1, uses_anonymous_args = 0
 2237 04dc 0DC0A0E1 		mov	ip, sp
 2238              	.LCFI10:
 2239              		.cfi_def_cfa_register 12
 2240 04e0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2241 04e4 04B04CE2 		sub	fp, ip, #4
 2242              		.cfi_offset 14, -8
 2243              		.cfi_offset 13, -12
 2244              		.cfi_offset 11, -16
 2245              	.LCFI11:
 2246              		.cfi_def_cfa 11, 4
 2247 04e8 10D04DE2 		sub	sp, sp, #16
 2248 04ec 0030A0E1 		mov	r3, r0
 2249 04f0 15304BE5 		strb	r3, [fp, #-21]
 125:../timer.c    ****     int pos = t*4;
 2250              		.loc 1 125 0
 2251 04f4 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2252 04f8 0331A0E1 		mov	r3, r3, asl #2
 2253 04fc 10300BE5 		str	r3, [fp, #-16]
 126:../timer.c    ****     if (t > 0)
 2254              		.loc 1 126 0
 2255 0500 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2256 0504 000053E3 		cmp	r3, #0
 2257 0508 0200000A 		beq	.L47
 127:../timer.c    ****         pos += 4;
 2258              		.loc 1 127 0
 2259 050c 10301BE5 		ldr	r3, [fp, #-16]
 2260 0510 043083E2 		add	r3, r3, #4
 2261 0514 10300BE5 		str	r3, [fp, #-16]
 2262              	.L47:
 128:../timer.c    ****     
 129:../timer.c    ****     if (t < 0 || t > 5)
 2263              		.loc 1 129 0
 2264 0518 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2265 051c 050053E3 		cmp	r3, #5
 2266 0520 0100009A 		bls	.L48
 130:../timer.c    ****         return -1;
 2267              		.loc 1 130 0
 2268 0524 0030E0E3 		mvn	r3, #0
 2269 0528 080000EA 		b	.L49
 2270              	.L48:
 131:../timer.c    ****     
 132:../timer.c    ****     rTCON = rTCON | (1 << pos);
 2271              		.loc 1 132 0
 2272 052c 2C309FE5 		ldr	r3, .L50
 2273 0530 28209FE5 		ldr	r2, .L50
 2274 0534 001092E5 		ldr	r1, [r2, #0]
 2275 0538 0100A0E3 		mov	r0, #1
 2276 053c 10201BE5 		ldr	r2, [fp, #-16]
 2277 0540 1022A0E1 		mov	r2, r0, asl r2
 2278 0544 022081E1 		orr	r2, r1, r2
 2279 0548 002083E5 		str	r2, [r3, #0]
 133:../timer.c    **** 
 134:../timer.c    ****     return 0;
 2280              		.loc 1 134 0
 2281 054c 0030A0E3 		mov	r3, #0
 2282              	.L49:
 135:../timer.c    **** }
 2283              		.loc 1 135 0
 2284 0550 0300A0E1 		mov	r0, r3
 2285 0554 0CD04BE2 		sub	sp, fp, #12
 2286 0558 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2287 055c 1EFF2FE1 		bx	lr
 2288              	.L51:
 2289              		.align	2
 2290              	.L50:
 2291 0560 0800D501 		.word	30736392
 2292              		.cfi_endproc
 2293              	.LFE5:
 2295              		.align	2
 2296              		.global	tmr_stop
 2298              	tmr_stop:
 2299              	.LFB6:
 136:../timer.c    **** 
 137:../timer.c    **** int tmr_stop(enum tmr_timer t)
 138:../timer.c    **** {
 2300              		.loc 1 138 0
 2301              		.cfi_startproc
 2302              		@ Function supports interworking.
 2303              		@ args = 0, pretend = 0, frame = 16
 2304              		@ frame_needed = 1, uses_anonymous_args = 0
 2305 0564 0DC0A0E1 		mov	ip, sp
 2306              	.LCFI12:
 2307              		.cfi_def_cfa_register 12
 2308 0568 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2309 056c 04B04CE2 		sub	fp, ip, #4
 2310              		.cfi_offset 14, -8
 2311              		.cfi_offset 13, -12
 2312              		.cfi_offset 11, -16
 2313              	.LCFI13:
 2314              		.cfi_def_cfa 11, 4
 2315 0570 10D04DE2 		sub	sp, sp, #16
 2316 0574 0030A0E1 		mov	r3, r0
 2317 0578 15304BE5 		strb	r3, [fp, #-21]
 139:../timer.c    ****     int pos = t*4;
 2318              		.loc 1 139 0
 2319 057c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2320 0580 0331A0E1 		mov	r3, r3, asl #2
 2321 0584 10300BE5 		str	r3, [fp, #-16]
 140:../timer.c    ****     if (t > 0)
 2322              		.loc 1 140 0
 2323 0588 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2324 058c 000053E3 		cmp	r3, #0
 2325 0590 0200000A 		beq	.L53
 141:../timer.c    ****         pos += 4;
 2326              		.loc 1 141 0
 2327 0594 10301BE5 		ldr	r3, [fp, #-16]
 2328 0598 043083E2 		add	r3, r3, #4
 2329 059c 10300BE5 		str	r3, [fp, #-16]
 2330              	.L53:
 142:../timer.c    ****     
 143:../timer.c    ****     if (t < 0 || t > 5)
 2331              		.loc 1 143 0
 2332 05a0 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2333 05a4 050053E3 		cmp	r3, #5
 2334 05a8 0100009A 		bls	.L54
 144:../timer.c    ****         return -1;
 2335              		.loc 1 144 0
 2336 05ac 0030E0E3 		mvn	r3, #0
 2337 05b0 090000EA 		b	.L55
 2338              	.L54:
 145:../timer.c    ****     
 146:../timer.c    ****     rTCON = rTCON & ~(1 << pos);
 2339              		.loc 1 146 0
 2340 05b4 30309FE5 		ldr	r3, .L56
 2341 05b8 2C209FE5 		ldr	r2, .L56
 2342 05bc 001092E5 		ldr	r1, [r2, #0]
 2343 05c0 0100A0E3 		mov	r0, #1
 2344 05c4 10201BE5 		ldr	r2, [fp, #-16]
 2345 05c8 1022A0E1 		mov	r2, r0, asl r2
 2346 05cc 0220E0E1 		mvn	r2, r2
 2347 05d0 022001E0 		and	r2, r1, r2
 2348 05d4 002083E5 		str	r2, [r3, #0]
 147:../timer.c    **** 
 148:../timer.c    ****     return 0;
 2349              		.loc 1 148 0
 2350 05d8 0030A0E3 		mov	r3, #0
 2351              	.L55:
 149:../timer.c    **** }
 2352              		.loc 1 149 0
 2353 05dc 0300A0E1 		mov	r0, r3
 2354 05e0 0CD04BE2 		sub	sp, fp, #12
 2355 05e4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2356 05e8 1EFF2FE1 		bx	lr
 2357              	.L57:
 2358              		.align	2
 2359              	.L56:
 2360 05ec 0800D501 		.word	30736392
 2361              		.cfi_endproc
 2362              	.LFE6:
 2364              		.align	2
 2365              		.global	tmr_isrunning
 2367              	tmr_isrunning:
 2368              	.LFB7:
 150:../timer.c    **** 
 151:../timer.c    **** int tmr_isrunning(enum tmr_timer t)
 152:../timer.c    **** {
 2369              		.loc 1 152 0
 2370              		.cfi_startproc
 2371              		@ Function supports interworking.
 2372              		@ args = 0, pretend = 0, frame = 16
 2373              		@ frame_needed = 1, uses_anonymous_args = 0
 2374 05f0 0DC0A0E1 		mov	ip, sp
 2375              	.LCFI14:
 2376              		.cfi_def_cfa_register 12
 2377 05f4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2378 05f8 04B04CE2 		sub	fp, ip, #4
 2379              		.cfi_offset 14, -8
 2380              		.cfi_offset 13, -12
 2381              		.cfi_offset 11, -16
 2382              	.LCFI15:
 2383              		.cfi_def_cfa 11, 4
 2384 05fc 10D04DE2 		sub	sp, sp, #16
 2385 0600 0030A0E1 		mov	r3, r0
 2386 0604 15304BE5 		strb	r3, [fp, #-21]
 153:../timer.c    ****     int ret = 0;
 2387              		.loc 1 153 0
 2388 0608 0030A0E3 		mov	r3, #0
 2389 060c 10300BE5 		str	r3, [fp, #-16]
 154:../timer.c    ****     int pos = t*4;
 2390              		.loc 1 154 0
 2391 0610 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2392 0614 0331A0E1 		mov	r3, r3, asl #2
 2393 0618 14300BE5 		str	r3, [fp, #-20]
 155:../timer.c    ****     if (t > 0)
 2394              		.loc 1 155 0
 2395 061c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2396 0620 000053E3 		cmp	r3, #0
 2397 0624 0200000A 		beq	.L59
 156:../timer.c    ****         pos += 4;
 2398              		.loc 1 156 0
 2399 0628 14301BE5 		ldr	r3, [fp, #-20]
 2400 062c 043083E2 		add	r3, r3, #4
 2401 0630 14300BE5 		str	r3, [fp, #-20]
 2402              	.L59:
 157:../timer.c    ****     
 158:../timer.c    ****     if ((t >= 0) && (t <= 5)
 2403              		.loc 1 158 0
 2404 0634 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2405 0638 050053E3 		cmp	r3, #5
 2406 063c 0900008A 		bhi	.L60
 159:../timer.c    ****         && (rTCON & (0x1 << pos)))
 2407              		.loc 1 159 0
 2408 0640 34309FE5 		ldr	r3, .L61
 2409 0644 002093E5 		ldr	r2, [r3, #0]
 2410 0648 0110A0E3 		mov	r1, #1
 2411 064c 14301BE5 		ldr	r3, [fp, #-20]
 2412 0650 1133A0E1 		mov	r3, r1, asl r3
 2413 0654 033002E0 		and	r3, r2, r3
 2414 0658 000053E3 		cmp	r3, #0
 2415 065c 0100000A 		beq	.L60
 160:../timer.c    ****         ret = 1;
 2416              		.loc 1 160 0
 2417 0660 0130A0E3 		mov	r3, #1
 2418 0664 10300BE5 		str	r3, [fp, #-16]
 2419              	.L60:
 161:../timer.c    ****     
 162:../timer.c    ****     return ret;
 2420              		.loc 1 162 0
 2421 0668 10301BE5 		ldr	r3, [fp, #-16]
 163:../timer.c    **** }
 2422              		.loc 1 163 0
 2423 066c 0300A0E1 		mov	r0, r3
 2424 0670 0CD04BE2 		sub	sp, fp, #12
 2425 0674 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2426 0678 1EFF2FE1 		bx	lr
 2427              	.L62:
 2428              		.align	2
 2429              	.L61:
 2430 067c 0800D501 		.word	30736392
 2431              		.cfi_endproc
 2432              	.LFE7:
 2434              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 timer.c
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:1698   .text:00000000 $a
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:1701   .text:00000000 tmr_set_prescaler
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:1762   .text:00000084 $d
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:1766   .text:00000088 $a
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:1769   .text:00000088 tmr_set_divider
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:1878   .text:00000198 $d
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:1882   .text:0000019c $a
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:1885   .text:0000019c tmr_set_count
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:1916   .text:000001d4 $d
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:1924   .text:000001ec $a
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:1999   .text:000002a4 $d
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2013   .text:000002d0 $a
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2016   .text:000002d0 tmr_update
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2089   .text:00000380 $d
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2093   .text:00000384 $a
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2096   .text:00000384 tmr_set_mode
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2223   .text:000004d8 $d
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2227   .text:000004dc $a
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2230   .text:000004dc tmr_start
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2291   .text:00000560 $d
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2295   .text:00000564 $a
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2298   .text:00000564 tmr_stop
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2360   .text:000005ec $d
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2364   .text:000005f0 $a
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2367   .text:000005f0 tmr_isrunning
C:\Users\Celia\AppData\Local\Temp\ccfWMxjP.s:2430   .text:0000067c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
